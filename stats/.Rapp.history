x = 5
x
x = 4
x
x <- 4
x
x <- 10
x
x = rnorm(20)
x
x = runi(20)
x = runif(20)
x
x < 1
x = runif(1000)
x
x > 0 & x < 1
x = rnorm(1000)
x > 2
x < 2
x[0]
x
x < -2 or x > 2
x < -2 | x > 2
x < -3 | x > 3
x < -4 | x > 4
x = rnorm(2000)
x < -4 | x > 4
x = rnorm(10000)
x < -4 | x > 4
clear
clear()
my.rand = rnorm(10)
my.rand
my.
my.?
rang
my_rand = rnorm(10)
my_rand
x = 5
x == 5
data.frame
data.frame.age
data.frame.age = 4
data.frame.age
data = data.frame
data
data$age
data&
q
data$age
data.frame.age
age = data.frame.age
age
help(rnorm)
apropos('rnu')
apropos("rnun")
apropos("ru")
apropos('ru')
apropos('runi')
help(options)
age = c(50, 62, 60, 40, 48, 47, 57, 70, 48, 67)
insulin = c(16.5, 10.8, 32.3, 19.3, 14.2, 11.3, 15.5, 15.8, 16.2, 11.2)
tuan = data.frame(age, insulin)
tuan
# Cách 1: Nhập dữ liệu trực tiếp bằng hàm c()
age = c(50, 62, 60, 40, 48, 47, 57, 70, 48, 67)
insulin = c(16.5, 10.8, 32.3, 19.3, 14.2, 11.3, 15.5, 15.8, 16.2, 11.2)
khang = data.frame(age, insulin)
khang
age = (1, 2, 3)
age = c(1, 2, 3)
insulin = c(10, 9, 8, 6)
khang = data.frame(age, insulin)
# Cách 1 (tiếp tục): Nhập dữ liệu trực tiếp bằng hàm edit(data.frame())
ins = edit(data.frame())
# ============== Cách 02: Nhập số liệu trực tiếp: edit(data.frame())
# =========
q()
setwd("~/study/phan_tich_du_lieu_voi_r/stats")
# CHUẨN BỊ DỮ LIỆU
setwd("~/study/data_science/phan_tich_du_lieu_voi_r/stats")
getwd()
ds = read.csv('excel.csv', header=TRUE)
is.data.frame(ds)
attach(ds)
# KIỂM TRA `MISSING VALUE`
ds.new = na.omit(ds)
ds.new
# TÁCH RỜI DỮ LIỆU: SUBSET()
nam = subset(ds, sex=='Name')
nam = subset(ds, Sex=='Name')
nam
nam = subset(ds, Sex=='Nam')
nam
nam = subset(ds, Sex==1)
nam
nu = subset(ds, Sex==0)
nu
old = subset(ds, age >= 25)
old
old = subset(ds, Age >= 25)
old
dim(old)
dim(nu)
dim(nam)
dim(nu)[0]
nam.25 <- subset(ds, Age >= 25 && Sex == 1)
nam.25
nam.25 <- subset(ds, Age >= 25 & Sex == 1)
nam.25
old
# CHIẾT SỐ LIỆU TỪ MỘT `data.frame`
names(ds)
data2 = ds[, c(1, 3, 7)]
data2
dim(data2)
data3 = ds[1:10, c(1, 3, 7)]
data3
dim(data3)
data4 = ds[1:10, 1:3]
data4
dim(data4)
data5 = ds[1:10, 3:]
data5 = ds[1:10, 3:5]
data5
dim(data5)
# NHẬP 2 `data.frame` THÀNH MỘT: MERGE()
id = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
id
sex = c('Nam', 'Nu', 'Nu', 'Nam', 'Nam', 'Nu', 'Nam', 'Nam', 'Nam', 'Nu')
sẽ
sex
tc = c(4.0, 3.5, 4.7, 7.7, 5.0, 4.2, 5.9, 6.1, 5.9, 4.0)
d1 = data.frame(id, sex, tc)
d1
id = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)
sex = c('Nam', 'Nu', 'Nu', 'Nam', 'Nam', 'Nu', 'Nam', 'Nam', 'Nam', 'Nu', 'Nu')
tg = c(1.1, 2.1, 0.8, 1.1, 2.1, 1.5, 2.6, 1.5, 5.4, 1.9, 1.7)
d2 = data.frame(id, sex, tg)
d2
d = merge(d1, d2, by='id', all=true)
d = merge(d1, d2, by='id', all=TRUE)
d
d.notna = na.omit(d)
d.notna
# 3.5: MÃ HOÁ SỐ LIỆU (DATA CODING)
# Biến đỗie số liệu từ biến liên tục sang biến mang tính phân loại
bmd = c(-0.92, 0.21, 0.17, -3.21, -1.80, -2.60, -2.00, 1.71, 2.12, -2.11)
bmd
diagnosis = bmd
diagnosis
diagnosis[diagnosis <= -2.5] = 1
diagnosis
diagnosis[diagnosis <= -2.5 & bmd <= 1.0] = 2
diagnosis[diagnosis > -1.0] = 3
data = data.frame(bmd, diagnosis)
data
# => CÁCH TRÊN LÀ SAI, KH THỂ DÙNG BIẾN `diagnosis` để biến đổi chính diagnosis
diagnosis = bmd
diagnosis[bmd <= -2.5] = 1
diagnosis[bmd > -2.5 & bmd <= 1.0] = 2
diagnosis[bmd > -2.5 & bmd <= -1.0] = 2
diagnosis[bmd > -1] = 3
data = data.frame(bmd, diagnosis)
data
# 3.5.1: BIẾN ĐỔI SỐ LIỆU BẰNG CÁCH DÙNG: REPLACE()
diagnosis = bmd
diagnosis
bmd <= -2.5
bmd[bmd <= -2.5]
int(bmd <= -2.5)
sum()
mean(bmd <= -2.5)
diagnosis = replace(diagnosis, bmd <= -2.5, 1)
diagnosis = replace(diagnosis, bmd > -2.5 & bmd <= 1.0, 2)
diagnosis = replace(diagnosis, bmd > -2.5 & bmd <= -1.0, 2)
diagnosis = replace(diagnosis, bmd > -1.0, 3)
diagnosis
# 3.5.2: BIẾN ĐỔI THÀNH FACTOR
# Chuyển đổi biến số số học thành biến số yếu tố (factor)
diag_factor = factor(diagnosis)
diag_factor
# Không thể dùng các phép toán lên biến số factor
mean(diag_factor)
# Chỉ có thể dùng các phép toán lên biến số số học
mean(diagnosis)
# 3.6: CHIA NHÓM BẰNG: CUT()
age = c(17, 19, 22, 43, 14, 8, 12, 19, 20, 51, 8, 12, 27, 31, 44)
cut(age, 2)
table(cut(age, 2))
c(cut(age, 2))
ageg = cut(age, 3, labels=c('low', 'medium', 'high'))
ageg
table(ageg)
quantiles()
quartiles()
cut(age, )
cut(age, breaks=quartiles(age, c(0, 0.25, 0.50, 0.75, 1)), labels=c('q1', 'q2', 'q3', 'q4'), include.lowest=TRUE)
cut(age, breaks=quantiles(age, c(0, 0.25, 0.50, 0.75, 1)), labels=c('q1', 'q2', 'q3', 'q4'), include.lowest=TRUE)
# 3.7: TẬP HỢP SỐ LIỆU BẰNG: CUT2() (Hmisc)
library(Hmisc)
library('~/Downloads/Hmisc')
getwd()
library(Hmisc)
library(Hmisc)
install.package
install.package()
install.packages()
# 3.7: TẬP HỢP SỐ LIỆU BẰNG: CUT2() (Hmisc)
install.packages()
install.packages('Hmisc')
library(Hmisc)
bmd = c(-0.92, 0.21, 0.17, -3.21, -1.80, -2.60, -2.00, 1.71, 2.12, -2.11)
group = cut2(bmd, g=2)
group
table(group)
group = cut2(bmd, g=3)
table(group)
exit()
q()
